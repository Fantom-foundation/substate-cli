#!/bin/bash

# Produces performance graphs 

PROGNAME=$(basename $0)
if [ -z ${DATABASE} ]; then
	DATABASE=/var/data/substate_metrics.db
fi
if [ -z ${OUTDIR} ]; then
	OUTDIR=.
fi

# run sqlite3 command
#  $1: sqlite3 database filename
#  $2: sqlite3 commmand
function runsql () {
   sqlite3 $1 <<< "$2"
   if [ $? -ne 0 ]
   then
	echo "${PROGNAME}: sqlite3 failed executing $2 on db $1"
	exit 1
   fi
}

# make a temp file for converting log file to a csv file
TMP_FILE=$(mktemp -q /tmp/runtime.XXXXXX.dat || exit 1)

# set trap to clean up file
trap 'rm -f -- "$TMP_FILE"' EXIT

# Plotting smartcontract_invocations.png
PNG_NAME=${OUTDIR}/smartcontract_invocations.png
echo "${PROGNAME}: produce plot ${PNG_NAME} ..."
runsql ${DATABASE} ".mode tabs
.output ${TMP_FILE}
SELECT invocations FROM summary_contract_runtime ORDER BY invocations ASC;
"
gnuplot <<< "
set terminal pngcairo
set output \"${PNG_NAME}\"
set logscale y
set xlabel \"Smart contracts\"
set ylabel \"Invocations #\"
set autoscale xfix
plot \"${TMP_FILE}\" notitle
"
rm -f -- "$TMP_FILE"

# Plotting smartcontract_total_runtime.png
PNG_NAME=${OUTDIR}/smartcontract_total_runtime.png
echo "${PROGNAME}: produce plot ${PNG_NAME} ..."
runsql ${DATABASE} ".mode tabs
.output ${TMP_FILE}
SELECT total_runtime/1.0e9 FROM summary_contract_runtime ORDER BY total_runtime ASC;
"
gnuplot <<< "
set terminal pngcairo
set output \"${PNG_NAME}\"
set logscale y
set xlabel \"Smart contracts\"
set ylabel \"Total Runtime (sec.)\"
set autoscale xfix
plot \"${TMP_FILE}\" notitle
"
rm -f -- "$TMP_FILE"

# Plotting smartcontract_average_runtime.png
PNG_NAME=${OUTDIR}/smartcontract_average_runtime.png
echo "${PROGNAME}: produce plot ${PNG_NAME} ..."
runsql ${DATABASE} ".mode tabs
CREATE TEMP TABLE tmp_average (n NUMBER);
INSERT INTO tmp_average SELECT 1.0e-9*total_runtime/invocations FROM summary_contract_runtime;
.output ${TMP_FILE}
SELECT n FROM tmp_average ORDER BY n ASC;
DROP TABLE tmp_average;
"
gnuplot <<< "
set terminal pngcairo
set output \"${PNG_NAME}\"
set logscale y
set xlabel \"Smart contracts\"
set ylabel \"Runtime (sec.)\"
set autoscale xfix
plot \"${TMP_FILE}\" notitle
"
rm -f -- "$TMP_FILE"

# Plotting smartcontract_percentage_runtime.png
PNG_NAME=${OUTDIR}/smartcontract_percentage_runtime.png
echo "${PROGNAME}: produce plot ${PNG_NAME} ..."
runsql ${DATABASE} ".mode tabs
.output ${TMP_FILE}
SELECT 100.0 * total_runtime/ (SELECT sum(total_runtime) FROM summary_contract_runtime) FROM summary_contract_runtime ORDER BY total_runtime ASC;
"
gnuplot <<< "
set terminal pngcairo
set output \"${PNG_NAME}\"
set logscale y
set xlabel \"Smart contracts\"
set ylabel \"Percentage of Total Runtime\"
set autoscale xfix
plot \"${TMP_FILE}\" notitle
"
rm -f -- "$TMP_FILE"

# Plotting smartcontract_combined_runtime.png
PNG_NAME=${OUTDIR}/smartcontract_combined_runtime.png
echo "${PROGNAME}: produce plot ${PNG_NAME} ..."
runsql ${DATABASE} ".mode tabs
.output ${TMP_FILE}
SELECT total_runtime/1.0e9, invocations FROM summary_contract_runtime ORDER BY total_runtime ASC;
"
gnuplot <<< "
set terminal pngcairo
set output \"${PNG_NAME}\"
set logscale y
set logscale y2
set y2tics
set xlabel \"Smart contracts\"
set ylabel \"Total Runtime (sec.)\"
set y2label \"Invocations (#)\"
set autoscale xfix
plot \"${TMP_FILE}\" using 1 title \"runtime\", \"${TMP_FILE}\" using 2 title \"invocations\" axis x1y2
"
rm -f -- "$TMP_FILE"

# remove temporary file
rm -f -- "$TMP_FILE"
trap - EXIT
exit
