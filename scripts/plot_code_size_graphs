#!/bin/bash

# Converts a runtime log file of replay to a sqlite3 database
#  The database substate_metrics.db has a table "runtime" containing 
#  contract address and observed runtime measured in nano-seconds.

PROGNAME=$(basename $0)
if [ -z ${DATABASE} ]; then
	DATABASE=/var/data/substate_metrics.db
fi
if [ -z ${OUTDIR} ]; then
	OUTDIR=. 
fi
# run sqlite3 command
#  $1: sqlite3 database filename
#  $2: sqlite3 commmand
function runsql () {
   sqlite3 $1 <<< "$2"
   if [ $? -ne 0 ]
   then
	echo "${PROGNAME}: sqlite3 failed executing $2 on db $1"
	exit 1
   fi
}

# make a temp file for converting log file to a csv file
TMP_FILE=$(mktemp -q /tmp/runtime.XXXXXX.csv || exit 1)

# set trap to clean up file
trap 'rm -f -- "$TMP_FILE"' EXIT


# Plotting
PNG_NAME=${OUTDIR}/nonce.png
echo "${PROGNAME}: produce plot ${PNG_NAME} ..."
runsql ${DATABASE} ".mode tabs
.output ${TMP_FILE}
SELECT nonce FROM v_contract_code_size  ORDER BY nonce ASC;
"
gnuplot <<< "
set terminal pngcairo
set output \"${PNG_NAME}\"
set logscale y
set xlabel \"Smart contracts\"
set ylabel \"Nonce\"
set autoscale xfix
plot \"${TMP_FILE}\" notitle
"
rm -f -- "$TMP_FILE"

PNG_NAME=${OUTDIR}/code_size.png
echo "${PROGNAME}: produce plot ${PNG_NAME} ..."
runsql ${DATABASE} ".mode tabs
.output ${TMP_FILE}
SELECT ROW_NUMBER () OVER (ORDER BY code_size_bytes), code_size_bytes, nonce FROM v_contract_code_size ORDER BY code_size_bytes ASC;
"
gnuplot <<< "
set terminal pngcairo size 800,600
set output \"${PNG_NAME}\"
set xlabel \"Smart contracts\"
set logscale y
set ytics nomirror
set ylabel \"Code size (bytes)\"
set logscale y2
set y2tics
set y2label \"nonce\"
set key box left top
plot \"${TMP_FILE}\" using 1:2 with points pointtype 7 axes x1y1 title 'Code size', \"${TMP_FILE}\" using 1:3 with points pointtype 5 axes x1y2 title 'nonce'
"
rm -f -- "$TMP_FILE"

PNG_NAME=${OUTDIR}/code_size_growth.png
echo "${PROGNAME}: produce plot ${PNG_NAME} ..."
runsql ${DATABASE} ".mode tabs
.output ${TMP_FILE}
SELECT block_timestamp, code_size, nonce FROM v_total_code_size ORDER BY block_timestamp ASC;
"
gnuplot <<< "
set terminal pngcairo size 800,600
set output \"${PNG_NAME}\"
set xlabel \"block timestamp\"
set xdata time
set format x \"%Y-%m\"
set timefmt \"%d\"
set autoscale xfix
set ylabel \"Code size (bytes)\"
set ytics nomirror
set y2tics
set y2label \"nonce\"
set key box left top
plot \"${TMP_FILE}\" using (\$1):2 with points pointtype 7 axes x1y1 title 'Code size', \"${TMP_FILE}\" using (\$1):3 with points pointtype 5 axes x1y2 title 'nonce'
"
rm -f -- "$TMP_FILE"

# remove temporary file
rm -f -- "$TMP_FILE"
trap - EXIT
exit
